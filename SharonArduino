#include "Arduino.h"
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ArduinoJson.h>
#include <DFRobotDFPlayerMini.h>
#include <Stepper.h>
#include <SoftwareSerial.h>
// WiFi 네트워크 설정
const char* ssid = "SSID";          // 연결할 WiFi SSID
const char* password = "PASSWORD";  // WiFi 비밀번호

// 서버 정보 설정
const char* host = "";  // Node.js 서버의 IP 주소
const int port = 8080;                        // Node.js 서버 포트

void setup() {
  Serial.begin(115200);       // 시리얼 통신 시작
  delay(1000);

  // WiFi 연결
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println();
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

    // DFPlayer 초기화
  SoftwareSerial mySerial(10, 11); // RX, TX
  DFRobotDFPlayerMini myDFPlayer;
  mySoftwareSerial.begin(9600);
  if (!myDFPlayer.begin(mySoftwareSerial)) {  
    Serial.println("DFPlayer communication failed!");
    while(true);
  }
  Serial.println("DFPlayer Mini online.");
  myDFPlayer.volume(4);  // 볼륨 설정 (0-30)
}

void loop() {
  sendGetRequest();
  delay(50);  // 50ms 주기로 요청 전송
}

void sendGetRequest() {
  WiFiClient client;
  int retryCount = 0;
  while (!client.connect(host, port) && retryCount < 5) {
    Serial.println("Connection failed, retrying...");
    delay(500);
    retryCount++;
  }
  if (retryCount == 5) {
    Serial.println("Connection failed after multiple attempts.");
    return;
  }

  // GET 요청 작성 및 전송
  String url = "/ard";  // Node.js 서버에서 처리할 엔드포인트 설정
  Serial.print("Requesting URL: ");
  Serial.println(url);

  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" +
               "Connection: close\r\n\r\n");

  // 서버의 응답을 읽기
  String response = "";
  while (client.connected() || client.available()) {
    if (client.available()) {
      response = client.readStringUntil('\n');
    }
  }

  StaticJsonDocument<200> doc;      
  DeserializationError error = deserializeJson(doc, response);
  if (!error) {
    int value = doc["do"];  // "do" 키의 값을 가져옴
    switch (value) {  //여러 코드로 받을경우 생각
      case 0:
        //그냥 하던거 계속하기
      case 1:
        Serial.println("1: 게임 시작 및 초기화 중...");
        break;
      case 2:
        //서버에 어떤 음성파일을 재생해야 할지 물어보는 코드
        Serial.println("2: 음성 재생 시작");
        myDFPlayer.playMp3Folder(2);   // Play the file "0002.mp3"
        break;
      case 3:
        //서버에 몇초 이동해야 하는지 물어보는 코드
        Serial.println("3: 모터 회전 (벽으로)");
        break;
      case 4:
         //서버에 몇초 이동해야 하는지 물어보는 코드
        Serial.println("4: 모터 회전 (사람으로)");
        break;
      case 5:
        Serial.println("5: 게임 종료 (시간초과)");
        //게임종료하는 함수 보내주기
        break;
      case 6:
        Serial.println("6: 게임 종료 (생존자 1명)");
       //게임종료하는 함수 보내주기
        break;
      case 24:
      //서버에 어떤 음성파일을 재생하고 몇초동안 목이 돌아갈지 물어보는 코드
      default:
        Serial.println("알 수 없는 명령입니다.");
        break;
    }
  } else {
    Serial.println("JSON 파싱 오류");
  }


  // 연결 종료
  client.stop();
  Serial.println("연결종료");
}
